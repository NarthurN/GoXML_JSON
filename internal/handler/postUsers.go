package handler

import (
	"encoding/json"
	"io"
	"net/http"
)

// Users - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è POST –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ /users
func (h *Handler) Users(w http.ResponseWriter, r *http.Request) {
	h.logger.Log("üôè Users: –Ω–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞")

	// –ß—Ç–µ–Ω–∏–µ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
	defer r.Body.Close()
	body, err := io.ReadAll(r.Body)
	if err != nil {
		h.logger.Logf("‚ùå Users: –æ—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞: %v", err)
		http.Error(w, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞", http.StatusBadRequest)
		return
	}

	if len(body) == 0 {
		h.logger.Log("‚ùå Users: —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –ø—É—Å—Ç–æ–µ")
		http.Error(w, "–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –ø—É—Å—Ç–æ–µ", http.StatusBadRequest)
		return
	}

	// TODO: —É–±—Ä–∞—Ç—å, –µ—Å–ª–∏ –Ω–µ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç—Å—è
	h.logger.Logf("‚úÖ Users: —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–æ, —Ä–∞–∑–º–µ—Ä: %d –±–∞–π—Ç", len(body))
	// h.logger.Logf("‚úÖ Users: —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–æ, —Ä–∞–∑–º–µ—Ä: %d –±–∞–π—Ç", len(body))

	// –ü–∞—Ä—Å–∏–Ω–≥ XML
	users, err := h.converter.ParseXML(body)
	if err != nil {
		h.logger.Logf("‚ùå Users: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ XML: %v", err)
		http.Error(w, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ XML", http.StatusBadRequest)
		return
	}

	h.logger.Logf("‚úÖ Users: XML —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–ø–∞—Ä—Å–µ–Ω: %v", users)

	// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏ Users –∏–∑ XML –≤ JSON
	jsonUsers, err := h.converter.UsersXMLToJSON(users)
	if len(jsonUsers) == 0 {
		if err != nil {
			h.logger.Logf("‚ùå –ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏. –û—à–∏–±–∫–∏: %v", err)
		} else {
			h.logger.Log("‚ùå –í—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∞–ª –≤–∞–ª–∏–¥–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
		}
		http.Error(w, "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤–∞–ª–∏–¥–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.", http.StatusBadRequest)
		return
	}

	if err != nil {
		h.logger.Logf("‚ö†Ô∏è –ß–∞—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏ –±—ã–ª–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞. –û—à–∏–±–∫–∏: %v", err)
	}

	h.logger.Logf("‚úÖ –°–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ %d –≤–∞–ª–∏–¥–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É...", len(jsonUsers))

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º JSON –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ localhost:8080/users
	h.logger.Log("üôè Users: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä")
	bodyResp, err := h.client.SendUsers(r.Context(), jsonUsers)
	if err != nil {
		h.logger.Logf("‚ùå Users: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ JSON –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: %v", err)
		http.Error(w, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ JSON –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", http.StatusInternalServerError)
		return
	}
	h.logger.Log("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä")

	// –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(http.StatusOK)

	response := map[string]interface{}{
		"data":           json.RawMessage(bodyResp),
		"usersProcessed": len(jsonUsers),
	}

	if err = json.NewEncoder(w).Encode(response); err != nil {
		h.logger.Logf("‚ùå Users: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞: %v", err)
		http.Error(w, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞", http.StatusInternalServerError)
		return
	}
}
