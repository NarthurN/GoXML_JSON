package handler

import (
	"context"
	"io"
	"net/http"

	"github.com/NarthurN/GoXML_JSON/internal/models"
)

// Users - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è POST –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ /users
func (h *Handler) Users(w http.ResponseWriter, r *http.Request) {
	ctx := context.Background()
	h.logger.Log("üôè Users: –Ω–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞")

	// –ß—Ç–µ–Ω–∏–µ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
	body, err := io.ReadAll(r.Body)
	if err != nil {
		h.logger.Logf("‚ùå Users: –æ—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞: %v", err)
		http.Error(w, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞", http.StatusBadRequest)
		return
	}
	defer r.Body.Close()

	if len(body) == 0 {
		h.logger.Log("‚ùå Users: —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –ø—É—Å—Ç–æ–µ")
		http.Error(w, "–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –ø—É—Å—Ç–æ–µ", http.StatusBadRequest)
		return
	}

	h.logger.Logf("‚úÖ Users: —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–æ: %s", string(body))

	// –ü–∞—Ä—Å–∏–Ω–≥ XML
	users, err := h.converter.ParseXML(body)
	if err != nil {
		h.logger.Logf("‚ùå Users: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ XML: %v", err)
		http.Error(w, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ XML", http.StatusBadRequest)
		return
	}

	h.logger.Logf("‚úÖ Users: XML —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–ø–∞—Ä—Å–µ–Ω: %v", users)

	// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏ Users –≤ JSON
	//jsonUsers := h.converter.UsersXMLToJSON(*users)
}
